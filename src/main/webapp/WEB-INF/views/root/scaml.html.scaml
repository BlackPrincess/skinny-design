- import _root_.lib._

-@ val options:Map[String,String] = Map("value1" -> "this is the first", "value2" -> "this is second option", "value3" -> "this is third option")
-@ val multiLineText :String = "first\rsecond\nthird".stripMargin

%h1 Api design
%div.form-group
  %div.controls.row
    %div
      %div.col-xs-12
        !=Text("name", "foo", 'class -> "form-control")
        %pre =Text("name", "foo", 'class -> "form-control")
%div.form-group
  %div.controls.row
    %div
      %div.col-xs-12
        !=Password("name", "******", 'class -> "form-control")
        %pre =Password("name", "******", 'class -> "form-control")
%div.form-group
  %div.controls.row
    %div
      %div.col-xs-12
        %select{:name => "option"}
          !=SelectOptions(options, "value2")
        %pre =SelectOptions(options, "value2")
%div.form-group
  %div.controls.row
    %div
      %div.col-xs-12
        !=TextArea("textarea", multiLineText, 'cols -> "130", 'rows -> "10")
        %pre =TextArea("textarea", multiLineText, 'cols -> "130", 'rows -> "10")
%div.form-group
  %div.controls.row
    %div
      %div.col-xs-12
        !=MultiLineText(multiLineText)
        %pre =MultiLineText(multiLineText)
%div.form-group
  %div.controls.row
    %div
      %div.col-xs-12
        !=Radios("foo", options, "value2")
        %pre =Radios("foo", options, "value2")
%div.form-group
  %div.controls.row
    %div
      %div.col-xs-12
        !=Checkboxes("foo", options, Set("value2", "value3"))
        %pre =Checkboxes("foo", options, Set("value2", "value3"))